// #autogenerated
using Npgsql;
using Dapper;
using System.Threading.Tasks;
using TarokScoreBoard.Core.Entities;

namespace TarokScoreBoard.Infrastructure.Repositories
{
  public class RoundModifierBaseRepository : BaseRepository<RoundModifier>
  {
    protected string selectFields = @"
        announced, 
				contra, 
				modifier_type, 
				round_id, 
				team";

    protected override string BaseSelect { get; set; }

    public RoundModifierBaseRepository(NpgsqlConnection conn) : base(conn)
    {    
      BaseSelect = $@"
        SELECT
          {selectFields}
        FROM round_modifier";
    }

    
    public RoundModifier Add(RoundModifier entity)
    {
      return conn.QueryFirst<RoundModifier>($@"
      INSERT INTO round_modifier
      (
        announced, 
				contra, 
				modifier_type, 
				round_id, 
				team
      )
      VALUES (:Announced, :Contra, :ModifierType, :RoundId, :Team)
      RETURNING
        {selectFields}
      ",
      entity);
    }

    public async Task<RoundModifier> AddAsync(RoundModifier entity)
    {
      return await conn.QueryFirstAsync<RoundModifier>($@"
      INSERT INTO round_modifier
      (
        announced, 
				contra, 
				modifier_type, 
				round_id, 
				team
      )
      VALUES (:Announced, :Contra, :ModifierType, :RoundId, :Team)
      RETURNING
        {selectFields}
      ",
      entity);
    }
  }
}
